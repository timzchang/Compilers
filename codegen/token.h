enum token{
	NOT_TOKEN,
	TOKEN_IDENT,
	TOKEN_STRING,
	TOKEN_STRING_LITERAL,
	TOKEN_INT,
	TOKEN_INT_LITERAL,
	TOKEN_IF,
	TOKEN_ARRAY,
	TOKEN_BOOLEAN,
	TOKEN_CHAR,
	TOKEN_CHAR_LITERAL,
	TOKEN_ELSE,
	TOKEN_FALSE,
	TOKEN_FOR,
	TOKEN_FUNCTION,
	TOKEN_PRINT,
	TOKEN_RETURN,
	TOKEN_TRUE,
	TOKEN_VOID,
	TOKEN_WHILE,
	TOKEN_ADD,
	TOKEN_SUB,
	TOKEN_MULT,
	TOKEN_DIV,
	TOKEN_MOD,
	TOKEN_EXP,
	TOKEN_INCREMENT,
	TOKEN_DECREMENT,
	TOKEN_GT,
	TOKEN_GE,
	TOKEN_EQ,
	TOKEN_LE,
	TOKEN_LT,
	TOKEN_AND,
	TOKEN_OR,
	TOKEN_NE,
	TOKEN_ASSGN,
	TOKEN_SEMICOLON,
	TOKEN_COLON,
	TOKEN_LPAREN,
	TOKEN_RPAREN,
	TOKEN_LBRACE,
	TOKEN_RBRACE,
	TOKEN_LCURLBRACE,
	TOKEN_RCURLBRACE,
	TOKEN_COMMA,
	TOKEN_NOT
};

typedef enum token token_t;
const char * token_string(token_t);

void edit_string(char * word);
